// Copyright 2025 The fawa Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-connect-es v1.4.0 with parameter "target=ts"
// @generated from file fawa/greet/v1/hello.proto (package proto.fawa.greet.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { GreetBidiStreamRequest, GreetBidiStreamResponse, GreetClientStreamRequest, GreetClientStreamResponse, GreetStreamRequest, GreetStreamResponse, SayHelloRequest, SayHelloResponse } from "./hello_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service proto.fawa.greet.v1.GreetService
 */
export const GreetService = {
  typeName: "proto.fawa.greet.v1.GreetService",
  methods: {
    /**
     * SayHello is a unary RPC.
     *
     * @generated from rpc proto.fawa.greet.v1.GreetService.SayHello
     */
    sayHello: {
      name: "SayHello",
      I: SayHelloRequest,
      O: SayHelloResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GreetStream is a server-streaming RPC.
     *
     * @generated from rpc proto.fawa.greet.v1.GreetService.GreetStream
     */
    greetStream: {
      name: "GreetStream",
      I: GreetStreamRequest,
      O: GreetStreamResponse,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * GreetClientStream is a client-streaming RPC.
     *
     * @generated from rpc proto.fawa.greet.v1.GreetService.GreetClientStream
     */
    greetClientStream: {
      name: "GreetClientStream",
      I: GreetClientStreamRequest,
      O: GreetClientStreamResponse,
      kind: MethodKind.ClientStreaming,
    },
    /**
     * GreetBidiStream is a bidirectional-streaming RPC.
     *
     * @generated from rpc proto.fawa.greet.v1.GreetService.GreetBidiStream
     */
    greetBidiStream: {
      name: "GreetBidiStream",
      I: GreetBidiStreamRequest,
      O: GreetBidiStreamResponse,
      kind: MethodKind.BiDiStreaming,
    },
  }
} as const;

